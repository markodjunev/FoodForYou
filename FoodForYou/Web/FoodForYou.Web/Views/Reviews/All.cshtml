@using FoodForYou.Common
@model FoodForYou.Web.ViewModels.Reviews.AllReviewsViewModel
@{
    ViewData["Title"] = "Reviews";
}

<div class="text-center">
    <a asp-controller="Products" asp-action="Details" asp-route-id="@Model.ProductId" class="h2">@this.ViewBag.ProductName</a>
</div>

<hr class="my-4" />

<div class="row">
    <div class="col-md-5"></div>
    <div class="col-md-7">
        <a asp-controller="Reviews" asp-action="Add" asp-route-id="@Model.ProductId" class="btn btn-primary">Add review</a>
    </div>
</div>

<hr class="my-4" />

@foreach (var review in Model.Reviews)
{
    <div class="container-fluid mt-100">
        <div class="row">
            <div class="col-md-12">
                <div class="card mb-4">
                    <div class="card-header">
                        <div class="media flex-wrap w-100 align-items-center">
                            <div class="media-body ml-3">
                                <i class="fas fa-user">@review.CreatorUserName</i>
                                <div class="text-muted small">
                                    <i class="fas fa-calendar-alt"><time datetime="@review.CreatedOn.ToString("O")"></time></i>
                                </div>
                            </div>
                            <div class="text-warning small ml-3">
                                @if (this.User.IsInRole(GlobalConstants.AdministratorRoleName))
                                {
                                    <div class="px-4 pt-3">
                                        <a asp-area="Administration" asp-controller="Reviews" asp-action="Delete" asp-route-id="@review.Id" class="btn btn-danger">Delete</a>
                                    </div>
                                }
                                else if (this.User.Identity.Name == @review.CreatorUserName)
                                {
                                    <div class="px-4 pt-3">
                                        <a asp-area="" asp-controller="Reviews" asp-action="Remove" asp-route-id="@review.Id" class="btn btn-danger">Delete</a>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <article>
                            @Html.Raw(review.SanitizedContent)
                        </article>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<hr class="my-4" />

<nav aria-label="Reviews">
    <ul class="pagination justify-content-center">
        @if (this.Model.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-controller="Reviews" asp-action="All" asp-route-id="@this.Model.ProductId" asp-route-page="@this.Model.PreviousPage" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }
        @{
            const int MorePagesToShow = 2;
            var pagesToShow = new List<int>();
            for (var i = 1; i <= MorePagesToShow; i++)
            {
                pagesToShow.Add(i);
            }
            for (var i = this.Model.CurrentPage - MorePagesToShow; i <= this.Model.CurrentPage + MorePagesToShow; i++)
            {
                if (i > 0)
                {
                    pagesToShow.Add(i);
                }
            }
            for (var i = this.Model.PagesCount - MorePagesToShow + 1; i <= this.Model.PagesCount; i++)
            {
                if (i > 0)
                {
                    pagesToShow.Add(i);
                }
            }
            pagesToShow = pagesToShow.Where(x => x <= this.Model.PagesCount).Distinct().OrderBy(x => x).ToList();
        }
        @for (var i = 0; i < pagesToShow.Count; i++)
        {
            var className = string.Empty;
            var pageNumber = pagesToShow[i];
            if (pageNumber == this.Model.CurrentPage)
            {
                className = "active";
            }
            if (i > 0 && pageNumber - 1 != pagesToShow[i - 1])
            {
                <li class="page-item @className"><a class="page-link" asp-controller="Reviews" asp-action="All" asp-route-id="@this.Model.ProductId" asp-route-page="@(pagesToShow[i - 1] + 1)">...</a></li>
            }
            <li class="page-item @className"><a class="page-link" asp-controller="Reviews" asp-action="All" asp-route-id="@this.Model.ProductId" asp-route-page="@pageNumber">@pageNumber</a></li>
        }
        @if (this.Model.CurrentPage < this.Model.PagesCount)
        {
            <li class="page-item">
                <a class="page-link" asp-controller="Reviews" asp-action="All" asp-route-id="@this.Model.ProductId" asp-route-page="@this.Model.NextPage" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }
    </ul>
</nav>